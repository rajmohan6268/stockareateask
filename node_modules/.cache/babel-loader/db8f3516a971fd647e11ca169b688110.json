{"ast":null,"code":"import _defineProperty from \"/home/mohan/Downloads/react-redux-filter-example-forked (7)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/mohan/Downloads/react-redux-filter-example-forked (7)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/mohan/Downloads/react-redux-filter-example-forked (7)/src/pages/editpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateWareHouse } from \"../actions/filter\";\nvar warehouse = {\n  name: \"\",\n  code: \"\",\n  city: \"\",\n  space_available: 0,\n  type: \"\",\n  cluster: \"\",\n  is_registered: true,\n  is_live: false\n};\n\nfunction editpage(props) {\n  _s();\n\n  var _React$createElement;\n\n  var dispatch = useDispatch();\n  var inputField = useSelector(function (state) {\n    return state.data[Number(getidfromurl())];\n  }); //   const [inputField, setInputField] = useState(\n  //     JSON.parse(JSON.stringify(warehouse))\n  //   );\n\n  var inputsHandler = function inputsHandler(e) {\n    setInputField(_objectSpread(_objectSpread({}, inputField), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validateinputFieldprops = function validateinputFieldprops() {\n    var isValid = true;\n\n    for (var key in inputField) {\n      if (inputField[key] === \"\") {\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  function getidfromurl() {\n    var url = window.location.href;\n    var id = url.substring(url.lastIndexOf(\"/\") + 1);\n    return id;\n  }\n\n  var submitButton = function submitButton() {\n    if (validateinputFieldprops()) {\n      dispatch(updateWareHouse({\n        value: inputField,\n        id: Number(getidfromurl())\n      }));\n      console.log(inputField, \"inputfildddddddddddddddddd\");\n      setInputField(JSON.parse(JSON.stringify(warehouse)));\n      return;\n    } else {\n      return alert(\"Please fill all the fields\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute top-0 bottom-0 left-0 right-0 flex flex-col w-full h-full bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full max-w-md p-4 mx-auto my-20 border shadow-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      toggleisAdding();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"w-6 h-6\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M6 18L18 6M6 6l12 12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  })), \"close\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"flex w-full \",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse name\",\n    value: inputField.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"flex w-full \",\n    type: \"text\",\n    name: \"code\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse code\",\n    value: inputField.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"flex w-full \",\n    type: \"text\",\n    name: \"city\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse city\",\n    value: inputField.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"flex w-full \",\n    type: \"Number\",\n    name: \"space_available\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse space_available\",\n    value: inputField.space_available,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"flex w-full \",\n    type: \"text\",\n    name: \"type\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse type\",\n    value: inputField.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"flex w-full \",\n    type: \"text\",\n    name: \"cluster\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    placeholder: \"enter Warehouse cluster\",\n    value: inputField.cluster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"is_registered\"), /*#__PURE__*/React.createElement(\"input\", (_React$createElement = {\n    className: \"flex w-full \"\n  }, _defineProperty(_React$createElement, \"className\", \"ml-2\"), _defineProperty(_React$createElement, \"name\", \"is_registered\"), _defineProperty(_React$createElement, \"onChange\", function onChange(e) {\n    inputsHandler(e);\n  }), _defineProperty(_React$createElement, \"value\", inputField.is_registered), _defineProperty(_React$createElement, \"type\", \"checkbox\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 11\n  }), _React$createElement)), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"is_live\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"ml-2\",\n    name: \"is_live\",\n    onChange: function onChange(e) {\n      inputsHandler(e);\n    },\n    value: inputField.is_live,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"r active \",\n    onClick: submitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Submit Now\")))));\n}\n\n_s(editpage, \"f0PElBJz0wlIaWTISnlrDbPjdok=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\neditpage.propTypes = {};\nexport default editpage;","map":{"version":3,"sources":["/home/mohan/Downloads/react-redux-filter-example-forked (7)/src/pages/editpage.js"],"names":["React","useState","useDispatch","useSelector","PropTypes","updateWareHouse","warehouse","name","code","city","space_available","type","cluster","is_registered","is_live","editpage","props","dispatch","inputField","state","data","Number","getidfromurl","inputsHandler","e","setInputField","target","value","validateinputFieldprops","isValid","key","url","window","location","href","id","substring","lastIndexOf","submitButton","console","log","JSON","parse","stringify","alert","toggleisAdding","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\nimport { updateWareHouse } from \"../actions/filter\";\nconst warehouse = {\n  name: \"\",\n  code: \"\",\n  city: \"\",\n  space_available: 0,\n  type: \"\",\n  cluster: \"\",\n  is_registered: true,\n  is_live: false,\n};\nfunction editpage(props) {\n  const dispatch = useDispatch();\n  const  inputField= useSelector(state => state.data[Number(getidfromurl())]);\n\n//   const [inputField, setInputField] = useState(\n//     JSON.parse(JSON.stringify(warehouse))\n//   );\n  const inputsHandler = (e) => {\n    setInputField({ ...inputField, [e.target.name]: e.target.value });\n  };\n  const validateinputFieldprops = () => {\n    let isValid = true;\n    for (let key in inputField) {\n      if (inputField[key] === \"\") {\n        isValid = false;\n      }\n    }\n    return isValid;\n  };\n  function getidfromurl() {\n    var url = window.location.href;\n    var id = url.substring(url.lastIndexOf(\"/\") + 1);\n    return id;\n  }\n\n  const submitButton = () => {\n    if (validateinputFieldprops()) {\n      dispatch(\n        updateWareHouse({ value: inputField, id: Number(getidfromurl()) })\n      );\n      console.log(inputField, \"inputfildddddddddddddddddd\");\n      setInputField(JSON.parse(JSON.stringify(warehouse)));\n      return;\n    } else {\n      return alert(\"Please fill all the fields\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"absolute top-0 bottom-0 left-0 right-0 flex flex-col w-full h-full bg-white\">\n        <div className=\"w-full max-w-md p-4 mx-auto my-20 border shadow-sm\">\n          <div className=\"flex items-center justify-end\">\n            <button\n              onClick={(e) => {\n                toggleisAdding();\n              }}\n            >\n              <div className=\"flex items-center justify-end\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"w-6 h-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n                close\n              </div>\n            </button>\n          </div>\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"flex w-full \"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse name\"\n            value={inputField.name}\n          />\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"code\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse code\"\n            value={inputField.code}\n          />\n  \n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"city\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse city\"\n            value={inputField.city}\n          />{\" \"}\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"Number\"\n            name=\"space_available\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse space_available\"\n            value={inputField.space_available}\n          />\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"type\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse type\"\n            value={inputField.type}\n          />\n          <br />{\" \"}\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"cluster\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse cluster\"\n            value={inputField.cluster}\n          />\n          <br />\n          <label>is_registered</label>\n          <input\n            className=\"flex w-full \"\n            className=\"ml-2\"\n            name=\"is_registered\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            value={inputField.is_registered}\n            type=\"checkbox\"\n          />{\" \"}\n          <br />\n          <label>is_live</label>\n          <input\n            className=\"ml-2\"\n            name=\"is_live\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            value={inputField.is_live}\n            type=\"checkbox\"\n          />{\" \"}\n          <br />\n          <div className=\"flex justify-center\">\n            <button className=\"r active \" onClick={submitButton}>\n              Submit Now\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\neditpage.propTypes = {};\n\nexport default editpage;\n"]},"metadata":{},"sourceType":"module"}