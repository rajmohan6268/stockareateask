{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"./Table\";\n\nvar getFilterCities = function getFilterCities(data, filterby, FilterValue) {\n  var filterdatabyfilbykeyandvalue = function filterdatabyfilbykeyandvalue() {\n    switch (filterby) {\n      case \"cluster\":\n        return data.filter(function (data) {\n          return data.cluster.toLowerCase().includes(FilterValue.toLowerCase());\n        });\n\n      case \"city\":\n        return data.filter(function (data) {\n          return data.city.toLowerCase().includes(FilterValue.toLowerCase());\n        });\n\n      case \"space_available\":\n        return data.filter(function (data) {\n          return data.space_available.toString().includes(FilterValue);\n        });\n\n      default:\n        return data;\n    }\n  };\n\n  console.log(filterdatabyfilbykeyandvalue);\n  var cities = [];\n\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map(function (obj) {\n      return obj;\n    });\n  } else {\n    cities = data.filter(function (obj) {\n      return obj[\"\".concat(filterby)] === FilterValue;\n    }).map(function (obj) {\n      return obj;\n    });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n\n  return cities;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: getFilterCities(state.data, state.visibilityFilter.filterbyKey, state.visibilityFilter.FilterValue),\n    filterby: state.visibilityFilter.filterbyKey,\n    FilterValue: state.visibilityFilter.FilterValue\n  };\n};\n\nexport default connect(mapStateToProps)(Table);","map":{"version":3,"sources":["/home/mohan/Downloads/react-redux-filter-example-forked (7)/src/components/Table/index.js"],"names":["connect","Table","getFilterCities","data","filterby","FilterValue","filterdatabyfilbykeyandvalue","filter","cluster","toLowerCase","includes","city","space_available","toString","console","log","cities","map","obj","mapStateToProps","state","visibilityFilter","filterbyKey"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAAiC;AACvD,MAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzC,YAAQF,QAAR;AACE,WAAK,SAAL;AACE,eAAOD,IAAI,CAACI,MAAL,CAAY,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACK,OAAL,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,WAAW,CAACI,WAAZ,EAApC,CADiB;AAAA,SAAZ,CAAP;;AAGF,WAAK,MAAL;AACE,eAAON,IAAI,CAACI,MAAL,CAAY,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACQ,IAAL,CAAUF,WAAV,GAAwBC,QAAxB,CAAiCL,WAAW,CAACI,WAAZ,EAAjC,CADiB;AAAA,SAAZ,CAAP;;AAGF,WAAK,iBAAL;AACE,eAAON,IAAI,CAACI,MAAL,CAAY,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACS,eAAL,CAAqBC,QAArB,GAAgCH,QAAhC,CAAyCL,WAAzC,CADiB;AAAA,SAAZ,CAAP;;AAGF;AACE,eAAOF,IAAP;AAdJ;AAgBD,GAjBD;;AAkBAW,EAAAA,OAAO,CAACC,GAAR,CAAYT,4BAAZ;AACA,MAAIU,MAAM,GAAG,EAAb;;AACA,MAAIZ,QAAQ,KAAK,KAAb,IAAsBC,WAAW,KAAK,KAA1C,EAAiD;AAC/CW,IAAAA,MAAM,GAAGb,IAAI,CAACc,GAAL,CAAS,UAACC,GAAD;AAAA,aAASA,GAAT;AAAA,KAAT,CAAT;AACD,GAFD,MAEO;AACLF,IAAAA,MAAM,GAAGb,IAAI,CACVI,MADM,CACC,UAACW,GAAD;AAAA,aAASA,GAAG,WAAId,QAAJ,EAAH,KAAuBC,WAAhC;AAAA,KADD,EAENY,GAFM,CAEF,UAACC,GAAD,EAAS;AACZ,aAAOA,GAAP;AACD,KAJM,CAAT;AAKAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,+BAApB;AACD;;AACD,SAAOA,MAAP;AACD,CAhCD;;AAkCA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCJ,IAAAA,MAAM,EAAEd,eAAe,CACrBkB,KAAK,CAACjB,IADe,EAErBiB,KAAK,CAACC,gBAAN,CAAuBC,WAFF,EAGrBF,KAAK,CAACC,gBAAN,CAAuBhB,WAHF,CADW;AAMlCD,IAAAA,QAAQ,EAAEgB,KAAK,CAACC,gBAAN,CAAuBC,WANC;AAOlCjB,IAAAA,WAAW,EAAEe,KAAK,CAACC,gBAAN,CAAuBhB;AAPF,GAAZ;AAAA,CAAxB;;AAUA,eAAeL,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,KAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"./Table\";\n\nconst getFilterCities = (data, filterby, FilterValue) => {\n  const filterdatabyfilbykeyandvalue = () => {\n    switch (filterby) {\n      case \"cluster\":\n        return data.filter((data) =>\n          data.cluster.toLowerCase().includes(FilterValue.toLowerCase())\n        );\n      case \"city\":\n        return data.filter((data) =>\n          data.city.toLowerCase().includes(FilterValue.toLowerCase())\n        );\n      case \"space_available\":\n        return data.filter((data) =>\n          data.space_available.toString().includes(FilterValue)\n        );\n      default:\n        return data;\n    }\n  };\n  console.log(filterdatabyfilbykeyandvalue);\n  let cities = [];\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map((obj) => obj);\n  } else {\n    cities = data\n      .filter((obj) => obj[`${filterby}`] === FilterValue)\n      .map((obj) => {\n        return obj;\n      });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n  return cities;\n};\n\nconst mapStateToProps = (state) => ({\n  cities: getFilterCities(\n    state.data,\n    state.visibilityFilter.filterbyKey,\n    state.visibilityFilter.FilterValue\n  ),\n  filterby: state.visibilityFilter.filterbyKey,\n  FilterValue: state.visibilityFilter.FilterValue,\n});\n\nexport default connect(mapStateToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}