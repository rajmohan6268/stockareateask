{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"./Table\";\n\nvar filterdatabyfilbykeyandvalue = function filterdatabyfilbykeyandvalue(data, searchValue, filterby) {\n  console.log(\"searchValue\", searchValue);\n\n  if (!filterby == \"All\" && !searchValue == \"\") {\n    return data.filter(function (data) {\n      console.log(data, \"data\");\n      return data.name === searchValue;\n    });\n  } else {\n    return data;\n  }\n};\n\nvar getFilterCities = function getFilterCities(data, filterby, FilterValue, searchValue) {\n  console.log(filterdatabyfilbykeyandvalue(data, searchValue, filterby), \"filterdatabyfilbykeyandvalue\");\n  var cities = [];\n\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map(function (obj) {\n      return obj;\n    });\n  } else {\n    cities = data.filter(function (obj) {\n      return obj[\"\".concat(filterby)] === FilterValue;\n    }).map(function (obj) {\n      return obj;\n    });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n\n  return cities;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: getFilterCities(state.data, state.visibilityFilter.filterbyKey, state.visibilityFilter.FilterValue, state.visibilityFilter.searchValue),\n    filterby: state.visibilityFilter.filterbyKey,\n    FilterValue: state.visibilityFilter.FilterValue\n  };\n};\n\nexport default connect(mapStateToProps)(Table);","map":{"version":3,"sources":["/home/mohan/Downloads/react-redux-filter-example-forked (7)/src/components/Table/index.js"],"names":["connect","Table","filterdatabyfilbykeyandvalue","data","searchValue","filterby","console","log","filter","name","getFilterCities","FilterValue","cities","map","obj","mapStateToProps","state","visibilityFilter","filterbyKey"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CACnCC,IADmC,EAGnCC,WAHmC,EAInCC,QAJmC,EAKhC;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,WAA3B;;AACA,MAAI,CAACC,QAAD,IAAa,KAAb,IAAsB,CAACD,WAAD,IAAc,EAAxC,EAA4C;AAC1C,WAAOD,IAAI,CAACK,MAAL,CAAY,UAACL,IAAD,EAAU;AAC3BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,MAAlB;AACA,aAAOA,IAAI,CAACM,IAAL,KAAcL,WAArB;AACD,KAHM,CAAP;AAID,GALD,MAKO;AACL,WAAOD,IAAP;AACD;AACF,CAfD;;AAgBA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACP,IAAD,EAAOE,QAAP,EAAiBM,WAAjB,EAA8BP,WAA9B,EAA8C;AACpEE,EAAAA,OAAO,CAACC,GAAR,CACEL,4BAA4B,CAACC,IAAD,EAAOC,WAAP,EAAoBC,QAApB,CAD9B,EAEE,8BAFF;AAIA,MAAIO,MAAM,GAAG,EAAb;;AACA,MAAIP,QAAQ,KAAK,KAAb,IAAsBM,WAAW,KAAK,KAA1C,EAAiD;AAC/CC,IAAAA,MAAM,GAAGT,IAAI,CAACU,GAAL,CAAS,UAACC,GAAD;AAAA,aAASA,GAAT;AAAA,KAAT,CAAT;AACD,GAFD,MAEO;AACLF,IAAAA,MAAM,GAAGT,IAAI,CACVK,MADM,CACC,UAACM,GAAD;AAAA,aAASA,GAAG,WAAIT,QAAJ,EAAH,KAAuBM,WAAhC;AAAA,KADD,EAENE,GAFM,CAEF,UAACC,GAAD,EAAS;AACZ,aAAOA,GAAP;AACD,KAJM,CAAT;AAKAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAoB,+BAApB;AACD;;AACD,SAAOA,MAAP;AACD,CAjBD;;AAmBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCJ,IAAAA,MAAM,EAAEF,eAAe,CACrBM,KAAK,CAACb,IADe,EAErBa,KAAK,CAACC,gBAAN,CAAuBC,WAFF,EAGrBF,KAAK,CAACC,gBAAN,CAAuBN,WAHF,EAIrBK,KAAK,CAACC,gBAAN,CAAuBb,WAJF,CADW;AAOlCC,IAAAA,QAAQ,EAAEW,KAAK,CAACC,gBAAN,CAAuBC,WAPC;AAQlCP,IAAAA,WAAW,EAAEK,KAAK,CAACC,gBAAN,CAAuBN;AARF,GAAZ;AAAA,CAAxB;;AAWA,eAAeX,OAAO,CAACe,eAAD,CAAP,CAAyBd,KAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"./Table\";\nconst filterdatabyfilbykeyandvalue = (\n  data,\n\n  searchValue,\n  filterby\n) => {\n  console.log(\"searchValue\", searchValue);\n  if (!filterby == \"All\" && !searchValue==\"\") {\n    return data.filter((data) => {\n      console.log(data, \"data\");\n      return data.name === searchValue\n    });\n  } else {\n    return data;\n  }\n};\nconst getFilterCities = (data, filterby, FilterValue, searchValue) => {\n  console.log(\n    filterdatabyfilbykeyandvalue(data, searchValue, filterby),\n    \"filterdatabyfilbykeyandvalue\"\n  );\n  let cities = [];\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map((obj) => obj);\n  } else {\n    cities = data\n      .filter((obj) => obj[`${filterby}`] === FilterValue)\n      .map((obj) => {\n        return obj;\n      });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n  return cities;\n};\n\nconst mapStateToProps = (state) => ({\n  cities: getFilterCities(\n    state.data,\n    state.visibilityFilter.filterbyKey,\n    state.visibilityFilter.FilterValue,\n    state.visibilityFilter.searchValue\n  ),\n  filterby: state.visibilityFilter.filterbyKey,\n  FilterValue: state.visibilityFilter.FilterValue,\n});\n\nexport default connect(mapStateToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}