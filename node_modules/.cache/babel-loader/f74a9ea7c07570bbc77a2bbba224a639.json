{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Table from \"./Table\";\n\nvar filterdatabyfilbykeyandvalue = function filterdatabyfilbykeyandvalue(data, filterby, FilterValue, searchValue) {\n  console.log(\"searchValue\", searchValue);\n\n  if (!filterby === \"All\" && searchValue) {\n    return data.filter(function (data) {\n      return data.name === searchValue.toLowerCase().trim();\n    });\n  } else {\n    return data;\n  }\n};\n\nvar getFilterCities = function getFilterCities(data, filterby, FilterValue, searchValue) {\n  console.log(filterdatabyfilbykeyandvalue(data, filterby, FilterValue, searchValue), \"filterdatabyfilbykeyandvalue\");\n  var cities = [];\n\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map(function (obj) {\n      return obj;\n    });\n  } else {\n    cities = data.filter(function (obj) {\n      return obj[\"\".concat(filterby)] === FilterValue;\n    }).map(function (obj) {\n      return obj;\n    });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n\n  return cities;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: getFilterCities(state.data, state.visibilityFilter.filterbyKey, state.visibilityFilter.FilterValue, state.visibilityFilter.searchValue),\n    filterby: state.visibilityFilter.filterbyKey,\n    FilterValue: state.visibilityFilter.FilterValue\n  };\n};\n\nexport default connect(mapStateToProps)(Table);","map":{"version":3,"sources":["/home/mohan/Downloads/react-redux-filter-example-forked (7)/src/components/Table/index.js"],"names":["connect","Table","filterdatabyfilbykeyandvalue","data","filterby","FilterValue","searchValue","console","log","filter","name","toLowerCase","trim","getFilterCities","cities","map","obj","mapStateToProps","state","visibilityFilter","filterbyKey"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CACnCC,IADmC,EAEnCC,QAFmC,EAGnCC,WAHmC,EAInCC,WAJmC,EAKhC;AACHC,EAAAA,OAAO,CAACC,GAAR,CAEE,aAFF,EAGEF,WAHF;;AAKA,MAAI,CAACF,QAAD,KAAc,KAAd,IAAqBE,WAAzB,EAAsC;AACpC,WAAOH,IAAI,CAACM,MAAL,CACL,UAACN,IAAD;AAAA,aAAUA,IAAI,CAACO,IAAL,KAAcJ,WAAW,CAACK,WAAZ,GAA0BC,IAA1B,EAAxB;AAAA,KADK,CAAP;AAGD,GAJD,MAIO;AACL,WAAOT,IAAP;AACD;AACF,CAlBD;;AAmBA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACV,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA8C;AACpEC,EAAAA,OAAO,CAACC,GAAR,CACEN,4BAA4B,CAACC,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,WAA9B,CAD9B,EAEE,8BAFF;AAIA,MAAIQ,MAAM,GAAG,EAAb;;AACA,MAAIV,QAAQ,KAAK,KAAb,IAAsBC,WAAW,KAAK,KAA1C,EAAiD;AAC/CS,IAAAA,MAAM,GAAGX,IAAI,CAACY,GAAL,CAAS,UAACC,GAAD;AAAA,aAASA,GAAT;AAAA,KAAT,CAAT;AACD,GAFD,MAEO;AACLF,IAAAA,MAAM,GAAGX,IAAI,CACVM,MADM,CACC,UAACO,GAAD;AAAA,aAASA,GAAG,WAAIZ,QAAJ,EAAH,KAAuBC,WAAhC;AAAA,KADD,EAENU,GAFM,CAEF,UAACC,GAAD,EAAS;AACZ,aAAOA,GAAP;AACD,KAJM,CAAT;AAKAT,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAoB,+BAApB;AACD;;AACD,SAAOA,MAAP;AACD,CAjBD;;AAmBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCJ,IAAAA,MAAM,EAAED,eAAe,CACrBK,KAAK,CAACf,IADe,EAErBe,KAAK,CAACC,gBAAN,CAAuBC,WAFF,EAGrBF,KAAK,CAACC,gBAAN,CAAuBd,WAHF,EAIrBa,KAAK,CAACC,gBAAN,CAAuBb,WAJF,CADW;AAOlCF,IAAAA,QAAQ,EAAEc,KAAK,CAACC,gBAAN,CAAuBC,WAPC;AAQlCf,IAAAA,WAAW,EAAEa,KAAK,CAACC,gBAAN,CAAuBd;AARF,GAAZ;AAAA,CAAxB;;AAWA,eAAeL,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,KAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Table from \"./Table\";\nconst filterdatabyfilbykeyandvalue = (\n  data,\n  filterby,\n  FilterValue,\n  searchValue\n) => {\n  console.log(\n    \n    \"searchValue\",\n    searchValue\n  );\n  if (!filterby === \"All\"&&searchValue) {\n    return data.filter(\n      (data) => data.name === searchValue.toLowerCase().trim()\n    );\n  } else {\n    return data;\n  }\n};\nconst getFilterCities = (data, filterby, FilterValue, searchValue) => {\n  console.log(\n    filterdatabyfilbykeyandvalue(data, filterby, FilterValue, searchValue),\n    \"filterdatabyfilbykeyandvalue\"\n  );\n  let cities = [];\n  if (filterby === \"All\" || FilterValue === \"All\") {\n    cities = data.map((obj) => obj);\n  } else {\n    cities = data\n      .filter((obj) => obj[`${filterby}`] === FilterValue)\n      .map((obj) => {\n        return obj;\n      });\n    console.log(cities, \"+++++++++++data++++++++++++++\");\n  }\n  return cities;\n};\n\nconst mapStateToProps = (state) => ({\n  cities: getFilterCities(\n    state.data,\n    state.visibilityFilter.filterbyKey,\n    state.visibilityFilter.FilterValue,\n    state.visibilityFilter.searchValue\n  ),\n  filterby: state.visibilityFilter.filterbyKey,\n  FilterValue: state.visibilityFilter.FilterValue,\n});\n\nexport default connect(mapStateToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}