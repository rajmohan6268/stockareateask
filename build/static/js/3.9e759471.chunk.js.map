{"version":3,"sources":["pages/editpage.js"],"names":["editpage","props","location","useHistory","dispatch","useDispatch","wrhouse","useSelector","state","data","Number","getidfromurl","useState","_is_live","setis_live","inputField","setInputField","inputsHandler","e","target","name","value","url","window","href","substring","lastIndexOf","useEffect","is_live","className","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","onChange","placeholder","code","city","space_available","cluster","is_registered","onClick","checked","isValid","key","validateinputFieldprops","updateWareHouse","id","push","alert"],"mappings":"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","file":"static/js/3.9e759471.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { updateWareHouse } from \"../actions/filter\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction editpage(props) {\n  const location = useHistory();\n  const dispatch = useDispatch();\n  const wrhouse = useSelector((state) => state.data[Number(getidfromurl())]);\n  const [_is_live, setis_live] = useState(\"live\");\n\n  const [inputField, setInputField] = useState({});\n  const inputsHandler = (e) => {\n    setInputField({ ...inputField, [e.target.name]: e.target.value });\n  };\n  const validateinputFieldprops = () => {\n    let isValid = true;\n    for (let key in inputField) {\n      if (inputField[key] === \"\") {\n        isValid = false;\n      }\n    }\n    return isValid;\n  };\n  function getidfromurl() {\n    var url = window.location.href;\n    var id = url.substring(url.lastIndexOf(\"/\") + 1);\n    return id;\n  }\n\n  const submitButton = () => {\n    if (validateinputFieldprops()) {\n      dispatch(\n        updateWareHouse({\n          value: {\n            name: inputField.name,\n            code: inputField.code,\n            city: inputField.city,\n            space_available: inputField.space_available,\n            type: inputField.type,\n            cluster: inputField.cluster,\n            is_registered: true,\n            is_live: _is_live == \"live\" ? true : false,\n          },\n          id: Number(getidfromurl()),\n        })\n      );\n      location.push(\"/\");\n\n      return alert(\"updatedI\");\n    } else {\n      return alert(\"Please fill all the fields\");\n    }\n  };\n\n  useEffect(() => {\n    if (wrhouse.is_live) {\n      setis_live(\"live\");\n    } else {\n      setis_live(\"notlive\");\n    }\n\n    setInputField(wrhouse);\n  }, []);\n  return (\n    <div>\n      <div className=\"absolute top-0 bottom-0 left-0 right-0 flex flex-col w-full h-full bg-white\">\n        <div className=\"w-full max-w-md p-4 mx-auto my-20 border shadow-sm\">\n          <div className=\"flex items-center justify-end\">\n            <Link to=\"/\">\n              <div className=\"flex items-center justify-end\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"w-6 h-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n                close\n              </div>\n            </Link>\n          </div>\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"flex w-full \"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse name\"\n            value={inputField.name}\n          />\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"code\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse code\"\n            value={inputField.code}\n          />\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"city\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse city\"\n            value={inputField.city}\n          />{\" \"}\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"Number\"\n            name=\"space_available\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse space_available\"\n            value={inputField.space_available}\n          />\n          <br />\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"type\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse type\"\n            value={inputField.type}\n          />\n          <br />{\" \"}\n          <input\n            className=\"flex w-full \"\n            type=\"text\"\n            name=\"cluster\"\n            onChange={(e) => {\n              inputsHandler(e);\n            }}\n            placeholder=\"enter Warehouse cluster\"\n            value={inputField.cluster}\n          />\n          <br />\n          <label>\n            is_registered : {inputField.is_registered ? \"yes\" : \"no\"}\n          </label>\n          <br />\n          <label>\n            is_live :{/* {inputField.is_live ? \"yes\" : \"no\"}  */}\n            {_is_live}{\" \"}\n          </label>\n          <div className=\"radio-btn-container\">\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setis_live(\"live\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value=\"live\"\n                name=\"_is_live\"\n                checked={_is_live == \"live\"}\n              />\n              live\n            </div>\n            <div\n              className=\"radio-btn\"\n              onClick={() => {\n                setis_live(\"notlive\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value=\"notlive\"\n                name=\"_is_live\"\n                checked={_is_live == \"notlive\"}\n              />\n              notlive\n            </div>\n          </div>\n          <br />\n          <div className=\"flex justify-center\">\n            <button className=\" active\" onClick={submitButton}>\n              Submit Now\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\neditpage.propTypes = {};\n\nexport default editpage;\n"],"sourceRoot":""}